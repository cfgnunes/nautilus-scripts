#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""

    # Execute initial checks.
    _check_dependencies ""
    _display_wait_box
    input_files=$(_get_files "type:file, max_files:1, mime:text/")

    checksum_file=$(cat "$input_files")
    checksum_file=$(sed -z "s|'|'\\\''|g" <<<"$checksum_file")

    export -f _verify_checksum
    export TEMP_DIR_TASK
    echo -n "$checksum_file" | xargs --max-procs="$(_get_max_procs)" --delimiter=$'\n' --replace="{}" bash -c "_verify_checksum '{}'"

    std_output=$(cat -- "$TEMP_DIR_TASK/"* 2>/dev/null) # Compile all results into a single output.
    std_output=$(_text_sort "$std_output")

    if [[ -z "$std_output" ]]; then
        std_output="No errors found."
    fi

    _display_text_box "$std_output"
}

_verify_checksum() {
    local line=$1
    local saved_checksum=""
    local saved_file=""
    local current_output=""
    local current_checksum=""
    local temp_file=""

    # Temporary file to store the output of the current checksum.
    temp_file=$(mktemp --tmpdir="$TEMP_DIR_TASK")

    saved_checksum=$(echo "$line" | cut -d " " -f1)
    saved_file=$(echo "$line" | cut -d " " -f3-)

    # Some checksum start with '\', for filenames with '\n' or '\'
    saved_file_decoded=$(echo -e "$saved_file")

    # If the file does not exist, report and skip the check.
    if [[ ! -e "$saved_file_decoded" ]]; then
        echo "[ERROR] No such file: $saved_file" >>"$temp_file"
        return 1
    fi

    current_output=$(sha512sum -- "$saved_file_decoded" 2>/dev/null)
    current_checksum=$(echo "$current_output" | cut -d " " -f1)

    # Compare the checksum.
    if [[ "$saved_checksum" != "$current_checksum" ]]; then
        echo "[ERROR] Mismatch checksum for the file: $saved_file. Saved: $saved_checksum. Current: $current_checksum." >>"$temp_file"
        return 1
    fi

    return 0
}

_main "$@"
