#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""
    local compiled_output_file=""

    # Execute initial checks.
    _check_dependencies ""
    _display_wait_box
    input_files=$(_get_files "type:file, recursive:true")
    output_dir=$PWD

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" "$output_dir"

    # Compile all results into a single output.
    compiled_output_file=$(_get_filename_suffix "$output_dir/sha384sum.txt")
    cat -- "$TEMP_DIR_TASK/"* >"$compiled_output_file"

    _display_result_box "$output_dir"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local output_file=""
    local std_output=""

    # Run the main process.
    output_file=$(mktemp --tmpdir="$TEMP_DIR_TASK")
    std_output=$(sha384sum -- "$input_file" 2>/dev/null)
    # shellcheck disable=SC2001
    std_output=$(sed "s|$PWD/|./|g" <<<"$std_output") # Remove $PWD directory from filenames.
    _check_result "$?" "" "$input_file" "$output_file" || return 1

    echo "$std_output" >"$output_file"
}

_main "$@"
