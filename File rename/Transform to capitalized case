#!/usr/bin/env bash

# Source the script 'common-functions.sh'
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Initial checks
    _check_dependencies ""
    _display_wait_box
    input_files=$(_get_files "$*" "type=all")

    # Run the function '_main_task' for each file in parallel
    _run_task_parallel "$input_files" "$output_dir"
    _display_result_box ""
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local output_file=""
    local std_output=""
    local dir=""
    local filename=""

    dir=$(dirname -- "$input_file")
    filename=$(basename -- "$input_file")

    # Transform to capitalized case
    local extension_converted=""
    local extension=""
    local filename_converted=""
    local filename_without_extension=""

    filename_without_extension=$(_get_filename_without_extension "$filename")
    extension=$(_get_filename_extension "$filename")
    # shellcheck disable=SC2001
    filename_converted=$(sed "s|\(\w\)\(\w*\)|\U\1\L\2|g" <<<"$filename_without_extension")
    extension_converted=${extension,,}
    output_file="$filename_converted$extension_converted"

    # Run the main process
    std_output=$(_move_file "when_conflict=skip" "$input_file" "$dir/$output_file" 2>&1)
    _check_result "$?" "$std_output" "$input_file" "" || return 1
}

_main "$@"
