#!/usr/bin/env bash

# Import the script 'common-functions.sh'
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Initial checks
    _display_wait_box
    input_files=$(_get_files "$*" "type=all")

    _run_main_task_parallel "$input_files" "$output_dir"
    _display_result_box ""
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local output_file=""
    local std_output=""

    # Rename files
    find "$input_file" -type f ! -path "*.git/*" -print0 2>/dev/null | while read -r -d '' file; do
        local dir=""
        local filename=""
        local new_filename=""

        dir=$(dirname -- "$file")
        filename=$(basename -- "$file")
        new_filename=${filename,,}

        # Run the main process
        std_output=$(_move_file "when_conflict=skip" "$file" "$dir/$new_filename" 2>&1)
        _check_result "$?" "$std_output" "$file" ""
    done

    # Rename directories
    find "$input_file" -type d ! -path "*.git/*" -print0 2>/dev/null | sort -r -z | while read -r -d '' dir; do
        local parent_dir=""
        local dirname=""
        local new_dirname=""

        parent_dir=$(dirname -- "$dir")
        dirname=$(basename -- "$dir")
        new_dirname=${dirname,,}

        # Run the main process
        std_output=$(_move_file "when_conflict=skip" "$dir" "$parent_dir/$new_dirname" 2>&1)
        _check_result "$?" "$std_output" "$dir" ""
    done
}

_main "$@"
