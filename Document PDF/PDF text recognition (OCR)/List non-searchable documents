#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local std_output=""

    # Execute initial checks.
    _check_dependencies "pdffonts(apt:poppler-utils,pacman:poppler-glib,dnf:poppler-utils)"
    _display_wait_box
    input_files=$(_get_files "type:file, recursive:true, mime:application/pdf")

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" ""

    std_output=$(cat -- "$TEMP_DIR_TASK/"* 2>/dev/null) # Compile all results into a single output.
    std_output=$(grep -v "^$" <<<"$std_output")         # Remove empty lines.
    std_output=$(sort --version-sort <<<"$std_output")  # Sort the result.

    _display_text_box "$std_output"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local temp_file=""

    # Save the result only for 'without fonts' PDFs.
    if ! pdffonts "$input_file" | sed -n 3p | grep --quiet "."; then
        # Work on a temporary file.
        temp_file=$(mktemp --tmpdir="$TEMP_DIR_TASK")
        echo "\"$(_strip_filename_pwd "$input_file")\"" >"$temp_file"
    fi
}

_main "$@"
