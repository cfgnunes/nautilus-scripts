#!/usr/bin/env bash

# Import the script 'common-functions.sh'
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

# Initial checks
_check_dependencies ""
_display_wait_box
input_files=$(_get_files "$*" "type=file; recursive=true; mime=text,application; skip_encoding=binary; skip_extension=pdf")

_main_task() {
    local input_file=$1
    local output_dir=$2
    local temp_file=""
    local result_file=""
    local file_encoding=""
    local file_information=""

    file_encoding=$(file --mime-encoding --brief -- "$input_file")
    file_information=$(file --separator "//" --no-pad -- "$input_file" | sed -r "s|(.*)// ||")

    # Run the checker 'non UTF-8 encoding'
    if [[ "${file_encoding,,}" != *"us-ascii"* ]] && [[ "${file_encoding,,}" != *"utf-8"* ]]; then
        result_file+="[non UTF-8 encoding]"
    fi

    # Run the checker 'UTF-8 with BOM'
    if [[ "${file_encoding,,}" == *"utf-8"* ]]; then
        if head -c3 "$input_file" | LC_ALL=C grep --quiet -P '\xef\xbb\xbf'; then
            result_file+="[UTF-8 with BOM]"
        fi
    fi

    # Run the checker 'non LF line break'
    if [[ "$file_information" == *"with CR"* ]]; then
        result_file+="[non LF line break]"
    fi

    # Run the checker 'trailing spaces' (for Unix and Windows files)
    if grep --quiet -P "[ \t]\r?$" "$input_file"; then
        result_file+="[trailing spaces]"
    fi

    # Run the checker 'trailing spaces' (for Mac files)
    if [[ "$file_information" == *"with CR line"* ]] || [[ "$file_information" == *"with CR, LF line"* ]]; then
        if cat -A "$input_file" | grep --quiet " ^M"; then
            result_file+="[trailing spaces]"
        fi
    fi

    # Run the checker 'missing line at the end'
    if ! tail -c 1 "$input_file" | hexdump -e '16/1 "%02x" "\n"' | grep --quiet "0d\|0a"; then
        result_file+="[missing line at the end]"
    else
        if tail -c 3 "$input_file" | hexdump -e '16/1 "%02x" "\n"' | grep --quiet "..0d0d\|..0a0a\|0a0d0a"; then
            # Run the checker 'has many line breaks at the end'
            result_file+="[extra lines at the end]"
        fi
    fi

    # Save the result only for files with problems
    if [[ -n "$result_file" ]]; then
        # Work on a temporary file
        temp_file=$(mktemp --tmpdir="$TEMP_DIR_TASK")
        echo "$result_file: \"$input_file\"" >"$temp_file"
    fi
}

_run_main_task_parallel "$input_files" ""

std_output=$(cat "$TEMP_DIR_TASK"/* 2>/dev/null)
std_output=$(grep -v "^$" <<<"$std_output") # Remove empty lines
# shellcheck disable=SC2001
std_output=$(sed "s|$PWD/|./|g" <<<"$std_output")  # Remove dir $PWD of the filename
std_output=$(sort --version-sort <<<"$std_output") # Sort the result

_display_text_box "$std_output"
