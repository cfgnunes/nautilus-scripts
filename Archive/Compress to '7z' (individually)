#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Execute initial checks.
    TASK_DATA="7z"
    if [[ "$(_get_distro_name)" == "fedora" ]]; then
        TASK_DATA="7za"
    fi
    _check_dependencies "$TASK_DATA(p7zip-full)"
    _display_wait_box
    input_files=$(_get_files "type:all")
    output_dir=$(_get_output_dir "use_same_dir:true")

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" "$output_dir"
    _display_result_box "$output_dir"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local output_file=""
    local std_output=""

    # Run the main process.
    output_file=$(_get_output_file "$input_file" "$output_dir" "extension_option:new, extension:7z")
    if [[ -d "$input_file" ]]; then
        cd -- "$input_file" || return 1
        std_output=$("$TASK_DATA" a -mx9 "$output_file" -- . 2>&1)
    else
        local input_file_relative=""
        # shellcheck disable=SC2001
        input_file_relative=$(sed "s|$PWD/|./|g" <<<"$input_file")
        std_output=$("$TASK_DATA" a -mx9 "$output_file" -- "$input_file_relative" 2>&1)
    fi

    _check_result "$?" "$std_output" "$input_file" "$output_file" || return 1
}

_main "$@"
