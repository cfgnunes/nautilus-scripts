#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Execute initial checks.
    _check_dependencies "iconv(libc-bin) perl(perl-base)"
    _display_wait_box
    input_files=$(_get_files "type:file, recursive:true, skip_encoding:binary, skip_extension:pdf|svg|bak")

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" "$output_dir"
    _display_result_box ""
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local output_file=""
    local std_output=""
    local temp_file1=""
    local temp_file2=""

    # Work on a temporary file.
    temp_file1=$(mktemp --tmpdir="$TEMP_DIR_TASK")
    temp_file2=$(mktemp --tmpdir="$TEMP_DIR_TASK")

    # Run the process (part 1) 'convert encoding to utf-8'
    std_output=$(iconv -f "$(file --brief --mime-encoding -- "$input_file")" "$input_file" -t utf-8 -o "$temp_file1")
    _check_result "$?" "$std_output" "$input_file" "" || return 1

    # Run the process (part 2) 'convert line ending to unix'
    std_output=$(perl -pe "s/\r\n|\n|\r/\n/g" "$temp_file1" >"$temp_file2")
    _check_result "$?" "$std_output" "$input_file" "" || return 1

    # Run the process (part 3) 'remove trailing spaces'
    sed -i "s|[ \t]*\(\r*\)$|\1|" "$temp_file2"

    # Run the process (part 4) 'remove the empty line in EOF'
    echo "" >>"$temp_file2"
    sed -i ':Loop;N;$!bLoop;s|\n*$||g' "$temp_file2"

    # Move the temporary file to the output.
    output_file=$input_file
    _move_temp_file_to_output "$input_file" "$temp_file2" "$output_file"

    # Remove the temporary files on each iteration (if not removed before).
    rm -rf -- "$temp_file1"
    rm -rf -- "$temp_file2"
}

_main "$@"
